server {
       listen 80;
       server_name 192.168.1.111;
       location / {
                rewrite ^(.*) https://$host$1 permanent;
       }
}

server {
       listen 443 default ssl;
       server_name 192.168.1.111;

       access_log /var/log/nginx/aivs.access.log;
       error_log /var/log/nginx/aivs.error.log;

       # This is just a snakeoil cert
       ssl_certificate /etc/ssl/certs/aivs_ssl.crt;
       ssl_certificate_key /etc/ssl/private/aivs_ssl.key;

       root /home/aivs/AIVScan/www/media/sitedown;

       # set this up to use versioned static files
       location /static/ {
       		if ($query_string) {
		   expires max;
		}
		alias /home/aivs/AIVScan/www/static/;
       }

       # set this up to use versioned media files
       location /media/ {
       		if ($query_string) {
		   expires max;
		}
		alias /home/aivs/AIVScan/www/media/;
	}

	# TODO: I don't think we need this because of collectstatic
	# also serve Django admin media files directly
	# location /admin/media/ {
	#	 root /home/aivs/.virtualenv/aivs/lib/python2.6/site-packages/django/contrib;
	#	 }

	# have nginx act as a reverse proxy for gunicorn
	location / {
		 auth_basic 'PwnStars team members only';
		 auth_basic_user_file .htpasswd;
		 proxy_pass_header Server;
		 proxy_set_header Host $http_host;
		 proxy_redirect off;
		 proxy_set_header X-Real-IP $remote_addr;
		 proxy_set_header X-Scheme $scheme;
		 proxy_connect_timeout 10;
		 proxy_read_timeout 10;
		 proxy_pass http://localhost:8000/;
		 client_max_body_size 1m;
		 }

	# if upstream isn't available, serve this:
	error_page 500 502 503 504 /media/sitedown/50x.html;
	error_page 400 /media/sitedown/404.html;
}